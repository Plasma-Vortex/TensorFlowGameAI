local = True

if local:
    from NeuralNet import Net
    import numpy as np
    from Game import *
    from Arena import *
    import matplotlib.pyplot as plt

np.random.seed()



# nets = []
# for i in range(2280, 2941, 20):
#     nets.append(Net('ResNet v1', i))
#     print('Loaded age %d' % i)

# score = tournament(nets, 1, 10, 0)
# print(score)
# print(nets[np.argmax(score)].age)

# s100_1 = [-50, -16, -39, -24, -6, -34, 12, 1, 3, 3,
#           9, 1, -6, 13, -7, -4, 6, 6, 14, 10,
#           6, 0, 3, 2, 8, 3, 9, 14, 15, 9,
#           17, 5, -8, 1, -7, -9, -7, 27, 20]
# s100_10 = [-28, -26, -17, -31, -2, -17, 0, -13, 2, 6,
#            0, 3, -5, -4, -2, 3, 8, -10, -1, 7,
#            8, 17, 14, -2, 0, 12, -5, 9, 17, 25,
#            13, 1, 1, -6, 0, -6, 14, 5, 10]
# s50_1 = np.array([-95, -100, -46, -58, -50, -69, -24, -58, -33, -19, -41, -63, -25, 19, -16, 8, -8, 11, -3, 5, -4, 0, -31, 0, 3, -28, -31, 25, 0, -15, 3, 4, 0, -3, 9, 5, 19,
#          28, 45, 32, 32, 6, 20, 6, 9, -7, 2, -4, 8, 14, 66, 7, 31, 27, 48, 21, 46, 30, 67, 22, 22, 39, 36, 3, -12, -7, -17, -1, -31, -21, -9, -18, -3, 6, 28, 32, 39, 33, 34])
# s50_10 = np.array([-75, -64, -37, -46, -54, -47, -26, -40, -15, 22,
#           -47, -46, -9, 8, -32, -2, -13, -6, -20, -22,
#           11, -9, -29, -39, -4, -2, -19, -9, 5, 7,
#           17, -5, 14, -1, -3, 12, -19, 20, -9, 36,
#           1, -3, 20, -3, 10, 37, 31, 21, -21, 27,
#           32, 15, 22, 2, 47, 10, 20, 13, 47, 54,
#           11, 19, 20, 20, 25, -5, -12, 11, -33, -21,
#           3, -36, 27, 15, 26, 40, 40, 31, 34])
# (1900, 3100, 20)
# s = [-4, -7, -17, -8, 1, -18, -28, 8, 1, -7, -27, -2, 3, 8, -2, -20, -30, 18, 10, -10, -8, 8, 9, 1, 10, 6, -12, -4, -20, -8, 7, 3, 3, -10, -8, -12, 13, 13, 22, 18, 13, 5, 4, 12, -8, 2, -7, -5, -20, 1, -9, 5, 4, 19, 34, 19, 14, -8, 14, 11]

# Conv v2
# s100_1 = [-6, -6, -7, 2, -2, 0, 0, -1, 14, 6]
# s50_10 = np.array([-17, -13, -13, -7, 4, 11, -11, -3, 10, -9, 5, 2, 16, 3, 9, 8, -11, -6, 4, 14, 4])
# (2300, 2901, 50)_10
# s50_10 = [-3, -5, -8, -15, 1, -2, -2, 1, 2, 8, 12, -1, 12]
# (3000, 4401, 50)_1
# s = [-5, -33, -31, -18, -16, -8, 1, 2, 0, -19, -9, -9, 2, 14, -2, -12, 3, 5, 16, 11, 10, 18, 7, -9, 11, 21, 14, 26, 10]
# (4000, 4901, 20)_1
# s = [-5, -1, -3, -10, -22, -18, -22, -24, 1, -4, -8, -16, -21, -11, -12, 3, -5, -1, 4, 3, 0, 7, 1, -6, 6, 5, 0, 17, -15, 5, 6, -29, 8, 14, -10, 28, 26, 23, 23, 14, 6, 5, 6, 13, 21, -2]
# (100, 9301, 100)_10
s100_10 = [-149, -146, -133, -144, -157, -149, -139, -137, -150, -99, -132, -117, -127, -102, -98, -56, -74, -35, -44, -54, -27, -13, -18, -11, -83, -62, -70, -61, -27, -60, -59, -26, 13, -45, -29, -13, -60, -30, 6, 14, -11, 9, 11, 45, 22, 19, 31, 39, 11, 3, 7, -20, 53, 21, 45, 31, 69, 42, 84, 46, 76, 40, 43, 27, 37, 54, 54, 64, 66, 63, 79, 77, 10, 86, 79, 81, 96, 76, 81, 81, 72, 79, 74, 76, 86, 100, 72, 87, 83, 86, 92, 80, 89]

# Resnet v1
# s200_1 = np.array([-20, -23, -25, -20, -5, -9, -8, 4, 10, 15, 16, 7, 11, 11, 12, 2, 22])
# s100_1 = [-42, -52, -41, -35, -44, -38, -44, -35, -10, -9, -9, -30, -16, 12, 6, 15, 19, 7, 24, -4, 24, 12, 22, 21, 21, 28, 23, 23, 22, 38, 12, 37, 43]
# s100_10 = [-48, -36, -30, -33, -50, -44, -39, -35, -42, -9, -29, -24, -23, -6, -7, 3, 7, 16, 20, 9, 27, 15, 26, 20, 13, 21, 29, 23, 36, 30, 25, 35, 32, 34, 34]
# s50_10 = np.array([-122, -110, -111, -117, -85, -96, -105, -81, -80, -93, -77, -86, -68, -95, -45, -83, -103, -45, -74, -36, -66, -34, -51, -71, -26, -46, -21, 6, -4, -28, -14, 23, -6, 26, 26, 16, 18, 30, -5, -6, 21, 44, 29, 29, 29, 47, 43, 46, 35, 41, 56, 41, 29, 39, 69, 61, 57, 36, 60, 84, 53, 28, 69, 60, 62, 74, 89, 76, 18, 55, 65, 77, 91, 92, 46, 94])
# (2280, 2941, 20)
s20_10 = [-28, -5, -10, -16, -15, -4, -20, -16, -27, -26, -22, -14, 1, 8, 13, 5, -8, 1, -35, 1, 3, 15, 23, 25, 4, 29, 25, 7, 15, 16, 18, 14, 14, 9]

# plt.plot(100*np.arange(1, len(s100_1)+1), s100_1, 'b-')
# plt.plot(100*np.arange(1, len(s100_10)+1), s100_10, 'r-')
# plt.plot(50*np.arange(1, len(s50_1)+1), s50_1/2, 'g-')
# plt.plot(50*np.arange(1, len(s50_10)+1), s50_10, 'c-')
# plt.plot(4000+20*np.arange(len(s)), s, 'c-')
# plt.plot(200*np.arange(1, len(s200_1)+1) - 100, s200_1*2, 'p-')
# plt.plot(100+100*np.arange(len(s100_10)), s100_10, 'b-')

# plt.show()

# n = Net("128-128-128-128", 2980)
# n = Net('Conv v2', 15000)
# n = Net('ResNet v1', 5440)
n = Net('ResNet v2', 2470)

n.train(5, 50)
# n.playHuman(100, 0)
